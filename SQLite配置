1.Nuget安装SQLite.CodeFirst
2.Nuget安装System.Data.SQLite
3.配置文件
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>
  
  //实际我只添加这行
  <entityFramework>
    <providers>
      <provider invariantName="System.Data.SQLite" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6"/>
    </providers>
  </entityFramework>

  //此Name与：base（"name"）一致
  <connectionStrings>
    <add name="PathologyUser" connectionString="Data Source=D:\SampleData2\SQLiteUser.sqlite" providerName="System.Data.SQLite.EF6" />
  </connectionStrings>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SQLite.EF6" />
        <add name="SQLite Data Provider (Entity Framework 6)" invariant="System.Data.SQLite.EF6" description=".NET Framework Data Provider for SQLite (Entity Framework 6)" type="System.Data.SQLite.EF6.SQLiteProviderFactory, System.Data.SQLite.EF6" />
      <remove invariant="System.Data.SQLite" /><add name="SQLite Data Provider" invariant="System.Data.SQLite" description=".NET Framework Data Provider for SQLite" type="System.Data.SQLite.SQLiteFactory, System.Data.SQLite" />
    </DbProviderFactories>
  </system.data>
</configuration>

4.添加实体类及操作类
namespace MyPanel.SQLite
{
    public class LanDingPathologyUser
    {
        public string SampleCode { get; set; }

        public string UserName { get; set; }

        public string Sex { get; set; }

        public int Age { get; set; }
    }
}

using SQLite.CodeFirst;
using System.Data.Entity;
namespace MyPanel.SQLite
{
    public class SQLiteUser:DbContext
    {
        public SQLiteUser() : base("name=PathologyUser")
        {

        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LanDingPathologyUser>().ToTable("LanDingPathologyUser").HasKey(p => p.SampleCode);
            Database.SetInitializer(new SqliteCreateDatabaseIfNotExists<SQLiteUser>(modelBuilder));
        }

        public virtual DbSet<LanDingPathologyUser> SQLiteUsers { get; set; }
    }
}
5.使用
using (var context = new SQLiteUser())
            {
                var user = new LanDingPathologyUser() {SampleCode="0000",Age=24,Sex="男",UserName="吴京城" };
                context.SQLiteUsers.Add(user);
                context.SaveChanges();
            }
